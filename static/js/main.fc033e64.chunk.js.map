{"version":3,"sources":["assets/background.jpg","assets/ma_face.jpg","Components/percentBar.tsx","skillSection.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","PercentBarDiv","styled","div","props","percent","color","PercentBar","onClick","className","label","SkillsData","desc","percentage","SkillSectionRow","Row","SkillsList","Col","SkillSection","useState","selected","setSelected","sm","map","skill","idx","key","style","marginTop","App","pageHeader","React","createRef","useEffect","window","innerWidth","updateScroll","windowScrollTop","pageYOffset","current","transform","addEventListener","removeEventListener","filter-color","backgroundImage","require","ref","Container","display","justifyContent","height","maxWidth","alt","src","Button","id","size","target","href","UncontrolledTooltip","delay","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fc033e64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.b184b957.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ma_face.bac68f9c.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface PercentBarProps {\r\n    label: string;\r\n    percent: number;\r\n    color: string;\r\n    onClick: any;\r\n}\r\n\r\nconst PercentBarDiv = styled.div<PercentBarProps>`\r\n    display: flex;\r\n    cursor: pointer;\r\n\r\n    .label {\r\n        width: 100px;\r\n    }\r\n\r\n    .bar {\r\n        display: flex;\r\n        flex: 1 0 auto;\r\n    }\r\n\r\n    .filled {\r\n        width: ${props => props.percent}%;\r\n        background-color: ${props => props.color};\r\n\r\n        &:hover {\r\n            background-color: ${props => props.color};\r\n        }\r\n    }\r\n\r\n    .empty {\r\n        text-align: right;\r\n        flex: 1 1 auto;\r\n    }\r\n`;\r\n\r\nfunction PercentBar (props: PercentBarProps) {\r\n    return <PercentBarDiv onClick={props.onClick} {...props}>\r\n        <div className='label'>\r\n            {props.label}\r\n        </div>\r\n\r\n        <div className='bar'>\r\n            <div className='filled'/>\r\n            <div className='empty'>\r\n                {props.percent}%\r\n            </div>\r\n        </div>\r\n        \r\n    </PercentBarDiv>\r\n}\r\n\r\nexport default PercentBar;","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {\r\n    Row,\r\n    Col\r\n  } from \"reactstrap\";\r\n  import PercentBar from './Components/percentBar';\r\n\r\n  const SkillsData = [\r\n      {\r\n          label: 'Javascript',\r\n          desc: `Javascript is my native tounge. I am working with it every day to achieve all kinds of weird and wonderful things. I am fluent in modern JS features such as async/await, frameworks like React, build tools such as Webpack and the JS superset Typescript.`,\r\n          percentage: 90,\r\n          color: '#ffa5006e'\r\n      },\r\n      {\r\n        label: 'HTML/CSS',\r\n        desc: `The bread and butter of web development. I am fluent in CSS preprocessors such as LESS and SASS, and frequenty use the tools such as flexbox and CSS Grid to pull off elegant layouts.`,\r\n        percentage: 80,\r\n        color: '#ff00007d'\r\n    },\r\n    {\r\n        label: 'Python',\r\n        desc: `Let's face it, Python is the best. It's elegant, powerful and easy to write. I have been working with Python for years building custom business logic for Odoo systems.`,\r\n        percentage: 70,\r\n        color: '#00008b78'\r\n    },\r\n    {\r\n        label: 'React',\r\n        desc: `React has changed the fronted-dev landscape massivly in the last few years. Recently I have been migrating a large application for a not-for-profit organisation from a monolithic KnockoutJS application into a beautifully clean and modern React app.`,\r\n        percentage: 70,\r\n        color: '#00858b78'\r\n    },\r\n    {\r\n        label: 'SQL',\r\n        desc: `When working with large sets of data, nothing beats cutting straight to the source and crafting an elegant SQL statement to fetch the data in a flash.`,\r\n        percentage: 50,\r\n        color: '#008b1178'\r\n    },\r\n    {\r\n        label: 'C#',\r\n        desc: `Whilst not my strongest language, I have experience on .NET projects that have exposed me to the values and advantages of stongly typed languages, which motivated me to learn Typescript to help my Javascript scale.`,\r\n        percentage: 40,\r\n        color: '#6f008b78'\r\n    },\r\n    {\r\n        label: 'Angular',\r\n        desc: `One of the other big players in the JS framework game, I have experience working with several Angular projects, both for work and through university.`,\r\n        percentage: 30,\r\n        color: '#c88787'\r\n    }\r\n\r\n  ]\r\n\r\nconst SkillSectionRow = styled(Row)`\r\n    height: 350px;\r\n`;\r\n\r\nconst SkillsList = styled(Col)`\r\n    display: flex;\r\n    flex-flow: column;\r\n    justify-content: space-evenly;\r\n`;\r\n\r\nfunction SkillSection() {\r\n    const [selected, setSelected] = useState<number>(0);\r\n\r\n\r\n    return <>\r\n    <SkillSectionRow>\r\n        <Col sm=\"6\">\r\n            {SkillsData.map((skill, idx) => {\r\n                return <div key={idx}>\r\n                    {selected === idx && <>\r\n                        <h4 style={{marginTop: 0}}>{skill.label}</h4>\r\n                        <p>{skill.desc}</p>\r\n                    </>}\r\n                </div>\r\n            })}\r\n        </Col>\r\n\r\n        <SkillsList sm=\"6\">\r\n            {SkillsData.map((skill, idx) => {\r\n                return <PercentBar \r\n                    key={idx}\r\n                    label={skill.label} \r\n                    percent={skill.percentage} \r\n                    color={skill.color} \r\n                    onClick={() => setSelected(idx)}\r\n                    />\r\n            })}\r\n        </SkillsList>\r\n    </SkillSectionRow>\r\n    </>\r\n}\r\n\r\nexport default SkillSection;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n  Container,\r\n  Button,\r\n  UncontrolledTooltip,\r\n} from \"reactstrap\";\r\n\r\nimport SkillSection from './skillSection';\r\n\r\nfunction App() {\r\n\r\n  let pageHeader = React.createRef<any>();\r\n\r\n  React.useEffect(() => {\r\n    if (window.innerWidth > 991) {\r\n      const updateScroll = () => {\r\n        let windowScrollTop = window.pageYOffset / 3;\r\n        pageHeader.current.style.transform =\r\n          \"translate3d(0,\" + windowScrollTop + \"px,0)\";\r\n      };\r\n      window.addEventListener(\"scroll\", updateScroll);\r\n      return function cleanup() {\r\n        window.removeEventListener(\"scroll\", updateScroll);\r\n      };\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <div\r\n        className=\"page-header clear-filter page-header-small\"\r\n        filter-color=\"blue\"\r\n      >\r\n        <div\r\n          className=\"page-header-image\"\r\n          style={{\r\n            backgroundImage: \"url(\" + require(\"./assets/background.jpg\") + \")\"\r\n          }}\r\n          ref={pageHeader}\r\n        ></div>\r\n        <Container>\r\n          <div className=\"photo-container\" style={{display: 'flex', justifyContent: 'center'}}>\r\n            <img style={{height: \"100%\", maxWidth: 'initial'}} alt=\"...\" src={require(\"./assets/ma_face.jpg\")}></img>\r\n          </div>\r\n          <h3 className=\"title\">Benjamin Bromley</h3>\r\n          <p className=\"category\">Software Developer</p>\r\n        </Container>\r\n      </div>\r\n      <div className=\"section\">\r\n      <div className=\"button-container\">\r\n      <Button\r\n                className=\"btn-round btn-icon\"\r\n                color=\"info\"\r\n                id=\"tooltip515203353\"\r\n                size=\"lg\"\r\n                target=\"_blank\"\r\n                href=\"https://www.linkedin.com/in/ben-bromley-5630ba80/\"\r\n              >\r\n                <i className=\"fab fa-linkedin\"></i>\r\n              </Button>\r\n              <UncontrolledTooltip delay={0} target=\"tooltip515203353\">\r\n                Yeah, I have a linkedIn (not much used :P)\r\n              </UncontrolledTooltip>\r\n              <Button\r\n                className=\"btn-round btn-icon\"\r\n                color=\"primary\"\r\n                id=\"tooltip515203352\"\r\n                size=\"lg\"\r\n                target=\"_blank\"\r\n                href=\"https://github.com/bromleyben\"\r\n              >\r\n                <i className=\"fab fa-github\"></i>\r\n              </Button>\r\n              <UncontrolledTooltip delay={0} target=\"tooltip515203352\">\r\n                Check out my Github\r\n              </UncontrolledTooltip>\r\n            </div>\r\n            <Container>\r\n              <h5 className=\"description\">\r\n                <p>\r\n                I am a full stack web developer with over 5 years industry experience engaging with companies around Australia to help them achieve the most from their enterprise systems.\r\n                </p>\r\n                <br/>\r\n                <p>\r\n                I have a passion for bringing out the very best of a project at every stage. Nothing beats hearing \"Wow, this is even better than I imagined!\". I believe believe regular consultation, feedback and copious amounts of caffine are key client satisfaction (without the budget blowout). \r\n                </p>\r\n                \r\n                         \r\n                </h5>\r\n\r\n              <h3 className=\"title\">\r\n                My Skills\r\n              </h3>\r\n\r\n              <h5 className=\"description\">\r\n                <SkillSection/>\r\n              </h5>\r\n\r\n              <h3 className=\"title\">\r\n                Under Construction!\r\n              </h3>\r\n              <h4 className=\"title\">\r\n                This portfolio is very much a work in progress, stay tuned for Project Samples, Blog and Component Showcase!\r\n              </h4>\r\n\r\n\r\n              {/* <h3 className=\"title\">\r\n                My Projects\r\n              </h3>\r\n\r\n              <h5 className=\"description\">\r\n                Talk about what I have done\r\n              </h5>\r\n\r\n              <h3 className=\"title\">\r\n                Blog\r\n              </h3>\r\n\r\n              <h5 className=\"description\">\r\n                Some stuff about the blog\r\n              </h5> */}\r\n            </Container>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// Theme Styles\r\nimport './lib/now-ui-kit/assets/css/bootstrap.min.css'\r\nimport \"./lib/now-ui-kit/assets/css/now-ui-kit.css\";\r\n// import \"assets/css/now-ui-kit.min.css\";\r\n// import \"assets/css/now-ui-kit.css.map\";\r\nimport \"./lib/now-ui-kit/assets/demo/demo.css\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}